/**
 * Public EMMA API
 * ### About Infrastructure API  **Base URL:** **<u>https://api.emma.ms/external</u>**   This **Infrastructure API** is for managing the emma cloud infrastructure within a project. The API enables you to view, create, edit, and delete _Virtual machines, Spot instances, Applications, Kubernetes clusters, SSH keys, Security groups, and Backup policies_. For creating the resources you can use the endpoints with the dictionaries: _Data centers, Locations, Providers, Operating systems, Virtual machines configurations, Spot instances configurations, Kubernetes clusters configurations._   ### Authentication   #### 1. Create service application   To access the API, enter your project, navigate to **Settings** > **Service Apps**, and create a service application. Select the access level **Read**, **Operate**, or **Manage**.   - **Read** - only GET methods are allowed in the API.   - **Operate** - some operations are allowed with the resources (e.g. _Start, Reboot,_ and _Shutdown_ of the Virtual machines).   - **Manage** - full creating, updating, and deleting of the resources is allowed.    #### 2. Get access token   - Copy the **Client ID** and **Client Secret** in the service application.  - Send an API request to the endpoint **_/issue-token** as specified in the **Authentication** section of the API documentation. You will receive access and refresh tokens in the response.   _For Linux / Mac:_  ```  curl -X POST https://api.emma.ms/external/v1/issue-token \\  -H \"Content-Type: application/json\" \\  -d \'{\"clientId\": \"YOUR-CLIENT-ID\", \"clientSecret\": \"YOUR-CLIENT-SECRET\"}\'  ```  _For Windows:_  ```  curl -X POST https://api.emma.ms/external/v1/issue-token ^  -H \"Content-Type: application/json\" ^  -d \"{\\\"clientId\\\": \\\"YOUR-CLIENT-ID\\\", \\\"clientSecret\\\": \\\"YOUR-CLIENT-SECRET\\\"}\"  ```   #### 3. Use access token in requests  The Bearer access token is a text string, included in the request header, for example:   _For Linux / Mac:_  ```  curl -X GET https://api.emma.ms/external/v1/locations -H \"Authorization: Bearer YOUR-ACCESS-TOKEN-HERE\"  ```   Use this token for the API requests.    #### 4. Refresh token  The access token will expire in 10 minutes. A new access token may be created using the refresh token (without Client ID and Client Secret).   To get a new access token send a request to the **_/refresh-token** endpoint:    _For Linux / Mac:_  ```  curl -X POST https://api.emma.ms/external/v1/refresh-token \\  -H \"Content-Type: application/json\" \\  -d \'{\"refreshToken\": \"YOUR-REFRESH-TOKEN\"}\'  ```       ### Possible response status codes   We use standard HTTP response codes to show the success or failure of requests.   `2xx` - successful responses.   `4xx` - client error responses (the response contains an explanation of the error).   `5xx` - server error responses.   The API uses the following status codes:   | Status Code | Description                  | Notes                                                                  |  |-------------|------------------------------|------------------------------------------------------------------------|  | 200         | OK                           | The request was successful.                                             |  | 201         | Created                      | The object was successfully created. This code is only used with objects that are created immediately.  | 204         | No content                   | A successful request, but there is no additional information to send back in the response body (in a case when the object was deleted).    | 400         | Bad Request                  | The request could not be understood by the server. Incoming parameters might not be valid. |  | 401         | Unauthorized            | The client is unauthenticated. The client must authenticate itself to get the requested response. |  | 403         | Forbidden                   | The client does not have access rights to the content.  | 404         | Not Found                    | The requested resource is not found.                                    |  | 409         | Conflict | This response is sent when a request conflicts with the current state of the object (e.g. deleting the security group with the compute instances in it).|  | 422         | Unprocessable Content   | The request was well-formed but was unable to be followed due to incorrect field values (e.g. creation of a virtual machine in the non-existent data center).  |  | 500         | Internal server Error                 | The server could not return the representation due to an internal server error. | 
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class VmAnalyticsResponse {
    /**
    * ID of VM
    */
    'vmId'?: number;
    'timecode'?: string;
    /**
    * Start of the period for average value calculation
    */
    'avgDateStart'?: string;
    /**
    * End of the period for average value calculation
    */
    'avgDateEnd'?: string;
    /**
    * Start of the period for percentile value calculation
    */
    'quantilesDateStart'?: string;
    /**
    * End of the period for percentile value calculation
    */
    'quantilesDateEnd'?: string;
    /**
    * Internal service parameter
    */
    'cpuDataPresent'?: number;
    /**
    * CPU utilization with values in range [0, 100*vCPUs]
    */
    'cpuUtilizationAverageCores'?: number;
    /**
    * 10th percentile of CPU utilization
    */
    'cpuUtilizationAverageCoresQ10'?: number;
    /**
    * 90th percentile of CPU utilization
    */
    'cpuUtilizationAverageCoresQ90'?: number;
    /**
    * Total CPU, vCPUs
    */
    'cpuCoresNumber'?: number;
    /**
    * Total CPU, %
    */
    'cpuTotalPercent'?: number;
    /**
    * Label
    */
    'cpuHumanLabel'?: string;
    /**
    * Internal service parameter
    */
    'ramDataPresent'?: number;
    /**
    * Memory utilization
    */
    'ramUsageAverageMb'?: number;
    /**
    * 10th percentile of memory utilization
    */
    'ramUsageAverageMbQ10'?: number;
    /**
    * 90th percentile of memory utilization
    */
    'ramUsageAverageMbQ90'?: number;
    /**
    * Total memory, MB
    */
    'ramTotalAmountMb'?: number;
    /**
    * Label
    */
    'ramHumanLabel'?: string;
    /**
    * Internal service parameter
    */
    'diskUsedDataPresent'?: number;
    /**
    * Disk utilization
    */
    'diskSpaceUsedGb'?: number;
    /**
    * 10th percentile of disk utilization
    */
    'diskSpaceUsedGbQ10'?: number;
    /**
    * 90th percentile of disk utilization
    */
    'diskSpaceUsedGbQ90'?: number;
    /**
    * Total disk size, GB
    */
    'diskSpaceTotalGb'?: number;
    /**
    * Label
    */
    'diskSpaceHumanLabel'?: string;
    /**
    * Internal service parameter
    */
    'diskWriteDataPresent'?: number;
    /**
    * Disk write, bps
    */
    'diskWriteBps'?: number;
    /**
    * Disk write
    */
    'diskWriteHuman'?: number;
    /**
    * Label
    */
    'diskWriteHumanLabel'?: string;
    /**
    * Internal service parameter
    */
    'diskReadDataPresent'?: number;
    /**
    * Disk read, bps
    */
    'diskReadBps'?: number;
    /**
    * Disk read
    */
    'diskReadHuman'?: number;
    /**
    * Label
    */
    'diskReadHumanLabel'?: string;
    /**
    * Internal service parameter
    */
    'networkOutDataPresent'?: number;
    /**
    * Network out, bps
    */
    'networkOutBps'?: number;
    /**
    * Network out
    */
    'networkOutHuman'?: number;
    /**
    * Label
    */
    'networkOutHumanLabel'?: string;
    /**
    * Internal service parameter
    */
    'networkInDataPresent'?: number;
    /**
    * Network in, bps
    */
    'networkInBps'?: number;
    /**
    * Network in
    */
    'networkInHuman'?: number;
    /**
    * Label
    */
    'networkInHumanLabel'?: string;
    /**
    * Internal service parameter
    */
    'isShownShort'?: number;
    /**
    * Dataset type
    */
    'type'?: VmAnalyticsResponse.TypeEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "vmId",
            "baseName": "vmId",
            "type": "number"
        },
        {
            "name": "timecode",
            "baseName": "timecode",
            "type": "string"
        },
        {
            "name": "avgDateStart",
            "baseName": "avgDateStart",
            "type": "string"
        },
        {
            "name": "avgDateEnd",
            "baseName": "avgDateEnd",
            "type": "string"
        },
        {
            "name": "quantilesDateStart",
            "baseName": "quantilesDateStart",
            "type": "string"
        },
        {
            "name": "quantilesDateEnd",
            "baseName": "quantilesDateEnd",
            "type": "string"
        },
        {
            "name": "cpuDataPresent",
            "baseName": "cpuDataPresent",
            "type": "number"
        },
        {
            "name": "cpuUtilizationAverageCores",
            "baseName": "cpuUtilizationAverageCores",
            "type": "number"
        },
        {
            "name": "cpuUtilizationAverageCoresQ10",
            "baseName": "cpuUtilizationAverageCoresQ10",
            "type": "number"
        },
        {
            "name": "cpuUtilizationAverageCoresQ90",
            "baseName": "cpuUtilizationAverageCoresQ90",
            "type": "number"
        },
        {
            "name": "cpuCoresNumber",
            "baseName": "cpuCoresNumber",
            "type": "number"
        },
        {
            "name": "cpuTotalPercent",
            "baseName": "cpuTotalPercent",
            "type": "number"
        },
        {
            "name": "cpuHumanLabel",
            "baseName": "cpuHumanLabel",
            "type": "string"
        },
        {
            "name": "ramDataPresent",
            "baseName": "ramDataPresent",
            "type": "number"
        },
        {
            "name": "ramUsageAverageMb",
            "baseName": "ramUsageAverageMb",
            "type": "number"
        },
        {
            "name": "ramUsageAverageMbQ10",
            "baseName": "ramUsageAverageMbQ10",
            "type": "number"
        },
        {
            "name": "ramUsageAverageMbQ90",
            "baseName": "ramUsageAverageMbQ90",
            "type": "number"
        },
        {
            "name": "ramTotalAmountMb",
            "baseName": "ramTotalAmountMb",
            "type": "number"
        },
        {
            "name": "ramHumanLabel",
            "baseName": "ramHumanLabel",
            "type": "string"
        },
        {
            "name": "diskUsedDataPresent",
            "baseName": "diskUsedDataPresent",
            "type": "number"
        },
        {
            "name": "diskSpaceUsedGb",
            "baseName": "diskSpaceUsedGb",
            "type": "number"
        },
        {
            "name": "diskSpaceUsedGbQ10",
            "baseName": "diskSpaceUsedGbQ10",
            "type": "number"
        },
        {
            "name": "diskSpaceUsedGbQ90",
            "baseName": "diskSpaceUsedGbQ90",
            "type": "number"
        },
        {
            "name": "diskSpaceTotalGb",
            "baseName": "diskSpaceTotalGb",
            "type": "number"
        },
        {
            "name": "diskSpaceHumanLabel",
            "baseName": "diskSpaceHumanLabel",
            "type": "string"
        },
        {
            "name": "diskWriteDataPresent",
            "baseName": "diskWriteDataPresent",
            "type": "number"
        },
        {
            "name": "diskWriteBps",
            "baseName": "diskWriteBps",
            "type": "number"
        },
        {
            "name": "diskWriteHuman",
            "baseName": "diskWriteHuman",
            "type": "number"
        },
        {
            "name": "diskWriteHumanLabel",
            "baseName": "diskWriteHumanLabel",
            "type": "string"
        },
        {
            "name": "diskReadDataPresent",
            "baseName": "diskReadDataPresent",
            "type": "number"
        },
        {
            "name": "diskReadBps",
            "baseName": "diskReadBps",
            "type": "number"
        },
        {
            "name": "diskReadHuman",
            "baseName": "diskReadHuman",
            "type": "number"
        },
        {
            "name": "diskReadHumanLabel",
            "baseName": "diskReadHumanLabel",
            "type": "string"
        },
        {
            "name": "networkOutDataPresent",
            "baseName": "networkOutDataPresent",
            "type": "number"
        },
        {
            "name": "networkOutBps",
            "baseName": "networkOutBps",
            "type": "number"
        },
        {
            "name": "networkOutHuman",
            "baseName": "networkOutHuman",
            "type": "number"
        },
        {
            "name": "networkOutHumanLabel",
            "baseName": "networkOutHumanLabel",
            "type": "string"
        },
        {
            "name": "networkInDataPresent",
            "baseName": "networkInDataPresent",
            "type": "number"
        },
        {
            "name": "networkInBps",
            "baseName": "networkInBps",
            "type": "number"
        },
        {
            "name": "networkInHuman",
            "baseName": "networkInHuman",
            "type": "number"
        },
        {
            "name": "networkInHumanLabel",
            "baseName": "networkInHumanLabel",
            "type": "string"
        },
        {
            "name": "isShownShort",
            "baseName": "isShownShort",
            "type": "number"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "VmAnalyticsResponse.TypeEnum"
        }    ];

    static getAttributeTypeMap() {
        return VmAnalyticsResponse.attributeTypeMap;
    }
}

export namespace VmAnalyticsResponse {
    export enum TypeEnum {
        Actual = <any> 'actual',
        Predicted = <any> 'predicted'
    }
}
