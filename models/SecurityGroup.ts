/**
 * Public EMMA API
 * ### About Infrastructure API  **Base URL:** **<u>https://api.emma.ms/external</u>**   This **Infrastructure API** is for managing the emma cloud infrastructure within a project. The API enables you to view, create, edit, and delete _Virtual machines, Spot instances, Applications, Kubernetes clusters, SSH keys, Security groups, and Backup policies_. For creating the resources you can use the endpoints with the dictionaries: _Data centers, Locations, Providers, Operating systems, Virtual machines configurations, Spot instances configurations, Kubernetes clusters configurations._   ### Authentication   #### 1. Create service application   To access the API, enter your project, navigate to **Settings** > **Service Apps**, and create a service application. Select the access level **Read**, **Operate**, or **Manage**.   - **Read** - only GET methods are allowed in the API.   - **Operate** - some operations are allowed with the resources (e.g. _Start, Reboot,_ and _Shutdown_ of the Virtual machines).   - **Manage** - full creating, updating, and deleting of the resources is allowed.    #### 2. Get access token   - Copy the **Client ID** and **Client Secret** in the service application.  - Send an API request to the endpoint **_/issue-token** as specified in the **Authentication** section of the API documentation. You will receive access and refresh tokens in the response.   _For Linux / Mac:_  ```  curl -X POST https://api.emma.ms/external/v1/issue-token \\  -H \"Content-Type: application/json\" \\  -d \'{\"clientId\": \"YOUR-CLIENT-ID\", \"clientSecret\": \"YOUR-CLIENT-SECRET\"}\'  ```  _For Windows:_  ```  curl -X POST https://api.emma.ms/external/v1/issue-token ^  -H \"Content-Type: application/json\" ^  -d \"{\\\"clientId\\\": \\\"YOUR-CLIENT-ID\\\", \\\"clientSecret\\\": \\\"YOUR-CLIENT-SECRET\\\"}\"  ```   #### 3. Use access token in requests  The Bearer access token is a text string, included in the request header, for example:   _For Linux / Mac:_  ```  curl -X GET https://api.emma.ms/external/v1/locations -H \"Authorization: Bearer YOUR-ACCESS-TOKEN-HERE\"  ```   Use this token for the API requests.    #### 4. Refresh token  The access token will expire in 10 minutes. A new access token may be created using the refresh token (without Client ID and Client Secret).   To get a new access token send a request to the **_/refresh-token** endpoint:    _For Linux / Mac:_  ```  curl -X POST https://api.emma.ms/external/v1/refresh-token \\  -H \"Content-Type: application/json\" \\  -d \'{\"refreshToken\": \"YOUR-REFRESH-TOKEN\"}\'  ```       ### Possible response status codes   We use standard HTTP response codes to show the success or failure of requests.   `2xx` - successful responses.   `4xx` - client error responses (the response contains an explanation of the error).   `5xx` - server error responses.   The API uses the following status codes:   | Status Code | Description                  | Notes                                                                  |  |-------------|------------------------------|------------------------------------------------------------------------|  | 200         | OK                           | The request was successful.                                             |  | 201         | Created                      | The object was successfully created. This code is only used with objects that are created immediately.  | 204         | No content                   | A successful request, but there is no additional information to send back in the response body (in a case when the object was deleted).    | 400         | Bad Request                  | The request could not be understood by the server. Incoming parameters might not be valid. |  | 401         | Unauthorized            | The client is unauthenticated. The client must authenticate itself to get the requested response. |  | 403         | Forbidden                   | The client does not have access rights to the content.  | 404         | Not Found                    | The requested resource is not found.                                    |  | 409         | Conflict | This response is sent when a request conflicts with the current state of the object (e.g. deleting the security group with the compute instances in it).|  | 422         | Unprocessable Content   | The request was well-formed but was unable to be followed due to incorrect field values (e.g. creation of a virtual machine in the non-existent data center).  |  | 500         | Internal server Error                 | The server could not return the representation due to an internal server error. | 
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { SecurityGroupRule } from '../models/SecurityGroupRule';
import { HttpFile } from '../http/http';

export class SecurityGroup {
    /**
    * Security group id
    */
    'id'?: number;
    /**
    * Security group name
    */
    'name'?: string;
    /**
    * ID of the user who created the security group
    */
    'createdById'?: number;
    /**
    * Name of the user who created the security group
    */
    'createdByName'?: string;
    /**
    * ID of the user who last edited the security group
    */
    'modifiedById'?: number;
    /**
    * Name of the user who last edited the security group
    */
    'modifiedByName'?: string;
    /**
    * Date and time of the security group\'s creation
    */
    'createdAt'?: string;
    /**
    * Date and time of the security group\'s last update
    */
    'modifiedAt'?: string;
    /**
    * Synchronization status of the security group. When you make changes in the rules the changes are propagated to the respective providerâ€™s security groups. While this is happening the security groups have the status Synchronizing. After it is done the status changes to Synchronized. When another VM is added to the security group it will not be synchronized at first with the other VMs, therefore the status will be Desynchronized.
    */
    'synchronizationStatus'?: SecurityGroupSynchronizationStatusEnum;
    /**
    * Recomposing status of the security group. When a new Virtual machine is added to the Security group it starts a synchronization process. During this process the Security group will have a Recomposing status.
    */
    'recomposingStatus'?: SecurityGroupRecomposingStatusEnum;
    /**
    * Text of the error when the Security group was last edited
    */
    'lastModificationErrorDescription'?: string;
    /**
    * List of the inbound and outbound rules in the Security group
    */
    'rules'?: Array<SecurityGroupRule>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdById",
            "baseName": "createdById",
            "type": "number",
            "format": ""
        },
        {
            "name": "createdByName",
            "baseName": "createdByName",
            "type": "string",
            "format": ""
        },
        {
            "name": "modifiedById",
            "baseName": "modifiedById",
            "type": "number",
            "format": ""
        },
        {
            "name": "modifiedByName",
            "baseName": "modifiedByName",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "string",
            "format": ""
        },
        {
            "name": "modifiedAt",
            "baseName": "modifiedAt",
            "type": "string",
            "format": ""
        },
        {
            "name": "synchronizationStatus",
            "baseName": "synchronizationStatus",
            "type": "SecurityGroupSynchronizationStatusEnum",
            "format": ""
        },
        {
            "name": "recomposingStatus",
            "baseName": "recomposingStatus",
            "type": "SecurityGroupRecomposingStatusEnum",
            "format": ""
        },
        {
            "name": "lastModificationErrorDescription",
            "baseName": "lastModificationErrorDescription",
            "type": "string",
            "format": ""
        },
        {
            "name": "rules",
            "baseName": "rules",
            "type": "Array<SecurityGroupRule>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SecurityGroup.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum SecurityGroupSynchronizationStatusEnum {
    Synchronized = 'SYNCHRONIZED',
    Desynchronized = 'DESYNCHRONIZED',
    Synchronizing = 'SYNCHRONIZING'
}
export enum SecurityGroupRecomposingStatusEnum {
    Recomposed = 'RECOMPOSED',
    Recomposing = 'RECOMPOSING'
}

